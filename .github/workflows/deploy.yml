name: Deploy with Maven

on:
  push:
    branches: [testdeployment]

jobs:
  build:

    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://repo.andrei1058.com
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17.0.2
        uses: actions/setup-java@v2
        with:
          java-version: '17.0.2'
          distribution: 'adopt'
      - name: Retrieve candidate version
        run: |
          sudo apt install jq -y
          curl -X PUT https://api.andrei1058.dev/v1/resources/1/versioning/commit -H "Accept: application/json" -H "Authorization: Bearer ${{ secrets.ANDEV_API_TOKEN }}" -H "Content-Type: application/json" --data '{"confirmation": true}' >> version.json
          UPDATE_VERSION=`jq '.version' version.json | tr -d '"'`
      - name: Build with Maven
        env:
          MVN_REPO_USER: ${{ secrets.MVN_REPO_USER }}
          MVN_REPO_PASS: ${{ secrets.MVN_REPO_PASS }}
          ANDEV_API_TOKEN: ${{ secrets.ANDEV_API_TOKEN }}
        run: |
          mvn versions:set -DnewVersion=$UPDATE_VERSION-SNAPSHOT
          mvn versions:update-child-modules
          mvn clean deploy -s ci_settings.xml -X
#      - name: release
#        uses: actions/create-release@v1
#        id: create_release
#        with:
#          draft: false
#          prerelease: false
#          release_name: Release ${{ github.ref }}
#          tag_name: ${{ github.ref }}
#          body_path: CHANGELOG.md
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#      - name: upload plugin jar artifact
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ github.token }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ./bedwars-plugin/target/bedwars-plugin-*.jar
#          asset_name: bedwars-plugin.jar
#          asset_content_type: application/jar
#          prerelease: false
